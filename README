================================================================================

Copyright:

GNU Lesser General Public License, Version 3 (LGPLv3)

Copyright (c) 2007-2014 by mazama Science


================================================================================

Overview:

This directory contains code for a working 'databrowser' that can be used as a 
starting point for creating other scientific databrowsers. The goal is to 
allow for easy configuration of end-to-end functionality for internactive data
visualization using the R statistical analysis package.

================================================================================

Manifest: 

LICENSE             - copy of LPGLv3
Makefile            - automated installation and updating
js/                 - JavaScript files
R/                  - R packages and scripts
README              - this file
__Databrowser.cgi   - template python CGI script
config/             - server-specific configuration info
data_local/         - static data files
node_modules/       - command line utilities
bower_components    - JS and CSS libraries managed by Bower
html/               - HTML files defining the user interface
output_en/          - output plots and files (potentially pre-generated)
style/              - CSS libraries and files
test/               - various test code

================================================================================

Prerequisites:

Python              - http://python.org/

R                   - http://www.r-project.org/

rpy2                - http://rpy.sourceforge.net/

NodeJS              - http://nodejs.org/

Bower               - http://bower.io/




Support for PDF files has additional requirements:

Ghostscript         - http://ghostscript.com

ImageMagick         - http://imagemagick.org
  - OR -
GraphicsMagick      - http://graphicsmagick.org

================================================================================

From client to back end the parts are as follows:

User Interface [client browser]

  app/html/             - contents (HTML)
  app/css/            - style (CSS)
  app/js/         - behavior (javascript)

Middleware/Controller [server]

  __Databrowser.cgi - CGI script (Python)

Back-End Analysis [server]

  R/                - data ingest/analysis/visualization

================================================================================

Initial installation procedure:

1) Edit config/Makefile_vars_YOURSERVER to point to existing directories on your server.

2) Install the code:

$ sudo make install location=YOURSERVER

3) Test whether the CGI functions from the command line:

$ /CGI_LOCATION/DATABROWSER.cgi
Content-type: application/json

{"status": "OK", "return_json": "{ \"loadSecs\":  0.003,\"plotSecs\":  0.031,\"totalSecs\":  0.034 }", "rel_base": "output_en/9f416e0b14c15934a726b98db4103ee1211d31aabd3a0a7879af35bcd74c9481"}

4) Test things from the web browser:

http://localhost/URL_PATH_TO_DATABROWSER/

5) Check the debug and transcript files for hints and lines of code to run in R

$ make debug location=YOURSERVER
$ make transcript location=YOURSERVER

================================================================================

Setting up the front end development environment (assuming NodeJS is installed):

1) Install Node dependencies (listed in package.json)

$ sudo npm install

2) Install Bower Components (listed in bower.json)

$ bower install

You need to run the install commands because the node_modules and bower_components
directories are not version controlled since they are large and not required for
deployment.

================================================================================

Changes to the front end code (JS or CSS) won't go into effect until the build
commands are run. We use Gulp as a build tool. Gulp automates a series of helpful
tasks, including: 

 - running JSHint (a JS syntax checker) on all of JS code.
 - concatenating JS and CSS files.
 - minifying JS files.
 - concatenating and minifying Bower dependencies.

Run Gulp anytime changes are made. The build tools and Bower and Node packages
aren't required to deploy the app, since Gulp combines anything we need into
build.js, dependencies.js, build.css, and dependencies.css files.

To run gulp:

$ gulp

This runs the 'default' task, which creates a new build for the JS and CSS code.

If you add new dependencies or want to remove them, open gulpfile.js and add the 
path to the dependency (i.e. 'bower_components/angular/angular.min.js') to either
the 'script-dependencies' or 'css-dependencies' tasks. Then run:

$ gulp dependencies

This will add new dependencies.js and dependencies.css to the build directory.
